---
- name: Create destination folder
  file:
    path: "{{ node_server_install_path }}"
    state: directory
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0755
- name: Install
  block:
  - name: Clone repository
    git:
      dest: "{{ node_server_install_path }}"
      repo: "{{ node_server_repo }}"
      version: "{{ node_server_version }}"
    register: source
  - name: Install dependencies
    command: npm install --production --no-save
    args:
      chdir: "{{ node_server_install_path }}"
    when: source.changed
    notify: "restart node_server"
  - name: Annotate
    include_role:
      name: annotate
    vars:
      role: api
      version: "{{ source.after }}"
      action: upgrade
    when: source.changed
  become: false
- name: Create {{ node_server_group }} group
  group:
    name: "{{ node_server_group }}"
    system: true
    state: present
- name: Create {{ node_server_user }} user
  user:
    name: "{{ node_server_user }}"
    comment: nsfw-server
    group: "{{ node_server_group }}"
    system: true
    state: present
    shell: /usr/sbin/nologin
    # https://github.com/npm/cli/issues/4769
    # home: /nonexistent
    # create_home: no
- name: Install service
  template:
    src: "node_server.service.j2"
    dest: "/etc/systemd/system/{{ node_server_service_name }}.service"
    mode: 0644
  notify: "restart node_server"
- name: Enable service
  service:
    name: "{{ node_server_service_name }}"
    enabled: yes
    state: started
- name: Call handlers
  meta: flush_handlers
- name: Get service facts
  service_facts:
- name: Check if service is running
  fail:
    msg: "Service {{ node_server_service_name }} not defined or running"
  when:
    ansible_facts.services[node_server_service_name + '.service'] is not defined or
    ansible_facts.services[node_server_service_name + '.service'].state != "running"
- name: "Wait for availability at port {{ node_server_host }}:{{ node_server_port }}"
  wait_for:
    host: "{{ node_server_host }}"
    port: "{{ node_server_port }}"
    timeout: 30
- name: Ensure unavailability at public IP at port {{ node_server_port }}
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: "{{ node_server_port }}"
    state: stopped
    timeout: 5
    msg: "Service {{ node_server_service_name }} was available on public IP."

