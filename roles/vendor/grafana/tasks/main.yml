---
- name: Update apt repo and cache on all Ubuntu box
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600

- name: Install required packages
  apt:
    name: "{{ grafana_requirements }}"
    state: present
  become: true
  tags:
    - install_packages

- name: Install repository key
  apt_key:
    url: https://apt.grafana.com/gpg.key
    state: present

- name: Add repository
  apt_repository:
    repo: "deb https://apt.grafana.com stable main"
    state: present

- name: Install the grafana package
  apt:
    name: grafana
    state: present
    update_cache: true
  tags:
    - installed_grafana
  notify: Restart grafana

- name: Systemd setup
  systemd:
    name: grafana-server
    enabled: true
    state: started

- name: Sleep for 10 sec and continue with setup
  wait_for:
    timeout: 10

# TODO: Make conditional
- name: Change default password for grafana admin
  command: grafana-cli admin reset-admin-password {{ grafana_password }}
  notify: Restart grafana
  changed_when: true

# TODO: Use template for config
- name: Make grafana listen on DMZ
  lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^(.*)http_addr =(.*)$'
    line: 'http_addr = {{ monitoring_host_internal_addr }}'
    # we don't need subnet mask here
    backrefs: true
    # line: 'http_addr = {{ ansible_eno1.4000.ipv4.address }}'
    # ^
    # |
    # gotta add address as ansible variable, discovered based on interface
    # UPD: only one address is allowed
    # UPD2: hosts have different interface naming, so it's bad idea to get it stricted to eno1 interface,
    # should filter by 4000 vlanID or filter if it's in vlan CIDR
    # let's hope that var 'vlan_ip' exists for every host in hosts_var
    mode: 0644
  notify: Restart grafana

- name: Enable search feature for Tempo on grafana web UI
  ini_file:
    path: /etc/grafana/grafana.ini
    section: feature_toggles
    option: "enable = tempoSearch tempoBackendSearch"
    allow_no_value: true
    mode: 0644
  notify: Restart grafana
