---
- name: Check keystore
  command: /usr/share/opensearch/bin/opensearch-keystore list
  register: keystore
  failed_when: keystore.rc not in [0, 65]
- name: Create keystore
  command: /usr/share/opensearch/bin/opensearch-keystore create
  when: keystore.rc == 65
- name: Add access key
  command: "/usr/share/opensearch/bin/opensearch-keystore add s3.client.{{ snapshot_repo_name }}.access_key --stdin"
  args:
    stdin: "{{ snapshot_key }}"
  when: "'s3.client.' + snapshot_repo_name + '.access_key' not in keystore.stdout"
  register: added_access_key
- name: Add secret key
  command: "/usr/share/opensearch/bin/opensearch-keystore add s3.client.{{ snapshot_repo_name }}.secret_key --stdin"
  args:
    stdin: "{{ snapshot_secret }}"
  when: "'s3.client.' + snapshot_repo_name + '.secret_key' not in keystore.stdout"
  register: added_secret_key
- name: Reload secure settings
  uri:
    url: "http://127.0.0.1:9200/_nodes/reload_secure_settings"
    method: POST
  when: added_access_key.changed or added_secret_key.changed
  run_once: true
- name: Check snapshot repository
  uri:
    url: "http://127.0.0.1:9200/_snapshot/{{ snapshot_repo_name }}"
    method: GET
    status_code: 200, 404
    body_format: json
  run_once: true
  register: snapshot_get
- name: Create snapshot repository
  uri:
    url: "http://127.0.0.1:9200/_snapshot/{{ snapshot_repo_name }}"
    method: PUT
    body_format: json
    body:
      type: "s3"
      settings: "{{ snapshot_repo_settings }}"
  run_once: true
  when: snapshot_get.status == 404 or snapshot_get.json.get(snapshot_repo_name) != snapshot_repo_settings
- name: Verify snapshot repository
  uri:
    url: "http://127.0.0.1:9200/_snapshot/{{ snapshot_repo_name }}/_verify"
    method: POST
  run_once: true
- name: "Install {{ snapshot_repo_name }} snapshot script"
  template:
    src: ipfs-search-snapshot.sh
    dest: "/usr/local/bin/ipfs-search-snapshot-{{ snapshot_repo_name }}.sh"
    mode: 0755
