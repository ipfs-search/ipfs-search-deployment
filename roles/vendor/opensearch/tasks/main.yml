---
# Disabling for Amazon Linux 2 as selinux is disabled by default.
- name: Disable the selinux
  selinux:
    state: disabled
  when: (ansible_distribution != "Ubuntu") and (ansible_distribution != "Amazon")

- name: Tune the system settings
  import_tasks: tune.yml

- name: Include opensearch installation
  import_tasks: opensearch.yml

- name: Create an empty keystore #(prevents unable to create temporary keystore)
  command: "{{ os_keystore_bin_path }} create"
  args:
    creates: "{{ os_conf_dir }}/opensearch.keystore"
  environment:
    OPENSEARCH_PATH_CONF: "{{ os_conf_dir }}"

- name: Set permissions on keystore
  file:
    state: file
    path: "{{ os_conf_dir }}/opensearch.keystore"
    owner: root
    group: "{{ os_user }}"
    mode: 0640

- name: Get all the installed ES plugins
  command: "{{ os_plugin_bin_path }} list"
  register: list_plugins
  changed_when: false

- name: Install plugins
  command: "{{ os_plugin_bin_path }} install --batch {{ item }}"
  when: item not in list_plugins.stdout
  with_items: "{{ os_plugins }}"

- name: Show all the installed ES plugins
  debug:
    msg: "{{ list_plugins.stdout }}"

- name: Make sure opensearch is started
  systemd:
    name: opensearch
    state: started
    enabled: yes
    daemon_reload: yes

- name: Flush handlers
  meta: flush_handlers

- name: Wait for opensearch to startup
  wait_for:
    host: "{{ os_api_host }}"
    port: "{{ os_api_port }}"
    delay: 5
    connect_timeout: 1

- name: Check the opensearch status # noqa command-instead-of-module
  # TODO curl used in place of get_url or uri module
  command: curl http://{{ os_api_host }}:{{ os_api_port }}/_cluster/health?pretty {% if os_enable_security %}-u 'admin:{{ admin_password }}'{% endif %} -k
  register: os_status
  changed_when: false

- name: Show the opensearch status
  debug:
    msg: "{{ os_status.stdout }}"
  failed_when: "'number_of_nodes' not in os_status.stdout"

- name: Verify the roles of opensearch cluster nodes # noqa command-instead-of-module
  # TODO curl used in place of get_url or uri module
  command: curl http://{{ os_api_host }}:{{ os_api_port }}/_cat/nodes?v {% if os_enable_security %}-u 'admin:{{ admin_password }}'{% endif %} -k
  register: os_roles
  changed_when: false
  run_once: true
