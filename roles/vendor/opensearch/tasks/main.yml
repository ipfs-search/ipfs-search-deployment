---

- hostname:
    name: "{{ inventory_hostname }}"

# Disabling for Amazon Linux 2 as selinux is disabled by default.
- name: Disable the selinux
  selinux:
    state: disabled
  when: (ansible_distribution != "Ubuntu") and (ansible_distribution != "Amazon")

# - name: Populate the nodes to /etc/hosts
#   import_tasks: etchosts.yml
### don't need this

# - name: Tune the system settings
#   import_tasks: tune.yml
### don't need this

- name: include opensearch installation
  include: opensearch.yml

# - name: include security plugin for opensearch
#   include: security.yml

# After the cluster forms successfully for the first time,
# remove the cluster.initial_master_nodes setting from each nodes' configuration.
# - name: Remove `cluster.initial_master_nodes` setting from configuration
#   command: sed -i '/cluster.initial_master_nodes/d' "{{os_conf_dir}}/opensearch.yml"
### there is a check in master playbook already

- name: restart opensearch service
  service:
    name: opensearch
    state: restarted
  when: opensearch_conf.changed

- name: Pause for 5 seconds, wait for service to start
  pause:
    seconds: 5

- name: Make sure opensearch service is started
  service:
    name: opensearch
    state: started
    enabled: yes

- name: Get all the installed ES plugins
  command: "{{ os_plugin_bin_path }} list"
  register: list_plugins

- name: Show all the installed ES plugins
  debug:
    msg: "{{ list_plugins.stdout }}"

- name: Wait for opensearch to startup
  wait_for: host={{ vlan_ip | ipaddr('address') }} port={{os_api_port}} delay=5 connect_timeout=1

- name: Check the opensearch status
  command: curl http://{{ vlan_ip | ipaddr('address') }}:{{ os_api_port }}/_cluster/health?pretty -k
  register: os_status

- name: Show the opensearch status
  debug:
    msg: "{{ os_status.stdout }}"
  failed_when: "'number_of_nodes' not in os_status.stdout"

- name: Verify the roles of opensearch cluster nodes
  command: curl http://{{ vlan_ip | ipaddr('address') }}:{{ os_api_port }}/_cat/nodes?v -k
  register: os_roles
  run_once: true

- name: Show the roles of opensearch cluster nodes
  debug:
    msg: "{{ os_roles.stdout }}"
  run_once: true
