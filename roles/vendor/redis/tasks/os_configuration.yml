- name: Set overcommit in sysctl
  sysctl:
    name: vm.overcommit_memory
    value: '1'
    state: present
    reload: yes
    ignoreerrors: yes

- name: Create redis user
  user:
    name: redis
    system: yes
    create_home: no
    shell: /bin/false

- name: Create redis cluster directories
  file:
    path: '{{ item }}'
    state: directory
    owner: redis
    group: redis
    mode: 0755
    recurse: yes
  loop:
    - /etc/redis_cluster/redis_7000
    - /etc/redis_cluster/redis_7001
    - /var/lib/redis_cluster/redis_7000
    - /var/lib/redis_cluster/redis_7001
    - /var/log/redis_cluster
    - /var/run/redis_cluster
  when: redis_cluster == true

- name: Create redis single node directories
  file:
    path: '{{ item }}'
    state: directory
    owner: redis
    group: redis
    mode: 0755
    recurse: yes
  loop:
    - /etc/redis
    - /var/log/redis
    - /var/lib/redis
    - /var/run/redis
  when: redis_cluster == false

- name: Apply redis configuration files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  loop:
    - { src: 'redis_7000.conf', dest: '/etc/redis_cluster/redis_7000/redis_7000.conf' }
    - { src: 'redis_7001.conf', dest: '/etc/redis_cluster/redis_7001/redis_7001.conf' }
    - { src: 'redis_7000.service', dest: '/etc/systemd/system/redis_7000.service' }
    - { src: 'redis_7001.service', dest: '/etc/systemd/system/redis_7001.service' }
  when: redis_cluster == true

- name: Apply redis configuration file
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  loop:
    - { src: 'redis.conf', dest: '/etc/redis_cluster/redis_7000/redis.conf' }
    - { src: 'redis.service', dest: '/etc/systemd/system/redis.service' }
  when: redis_cluster == false

- name: Configure redis permissions
  file:
    path: /usr/local/bin/{{ item }}
    owner: redis
    group: redis
  with_items:
    - redis-cli
    - redis-server
    - redis-benchmark
    - redis-check-aof
    - redis-check-rdb
    - redis-sentinel

- name: Setup redis cluster services
  systemd:
    name: "{{ item }}.service"
    daemon_reload: yes
  with_items:
    - redis_7000
    - redis_7001
  when: redis_cluster == true

- name: Setup redis single node service
  systemd:
    name: "{{ item }}.service"
    daemon_reload: yes
  with_items:
    - redis
  when: redis_cluster == false

- name: Start redis cluster services
  systemd:
    name: "{{ item }}.service"
    enabled: yes
    state: started
  with_items:
    - redis_7000
    - redis_7001
  when: redis_cluster == true

- name: Start redis single node service
  systemd:
    name: "{{ item }}.service"
    enabled: yes
    state: started
  with_items:
    - redis
  when: redis_cluster == false
