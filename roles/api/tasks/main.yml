---
- name: Create destination folder for search api
  file: path={{ api_install_path }} state=directory owner="{{ lookup('env','USER') }}"
- block:
  - name: Clone ipfs-search-api repository
    git:
      dest: "{{ api_install_path }}/search"
      repo: https://github.com/ipfs-search/ipfs-search-api.git
    notify: restart ipfs-search
  - name: Install search API
    command: npm install --no-package-lock
    args:
      chdir: "{{ api_install_path }}/search"
  - name: Clone ipfs-metadata-api repository
    git:
      dest: "{{ api_install_path }}/metadata"
      repo: https://github.com/ipfs-search/ipfs-metadata-api.git
    notify: restart ipfs-metadata
  - name: Install metadata API
    command: npm install --no-package-lock
    args:
      chdir: "{{ api_install_path }}/metadata"
  become: false
- name: Create ipfs-search group
  group: name=ipfs-search system=true state=present
- name: Create ipfs-search user
  user: name=ipfs-search comment="ipfs-search api" group=ipfs-search system=true state=present home=/nonexistent shell=/usr/sbin/nologin
- name: Install ipfs-search service
  template: src=ipfs-search.service dest=/etc/systemd/system/ipfs-search.service
  notify: restart ipfs-search
- name: Install ipfs-metadata service
  template: src=ipfs-metadata.service dest=/etc/systemd/system/ipfs-metadata.service
  notify: restart ipfs-metadata
- name: Install nginx configuration
  template: src=nginx-api.conf dest=/etc/nginx/sites-available/api.conf
  notify: restart nginx
- name: Enable nginx configuration
  file:
    path: /etc/nginx/sites-enabled/api.conf
    src: /etc/nginx/sites-available/api.conf
    state: link
  notify: restart nginx
- name: Enable search service
  service: name=ipfs-search enabled=yes state=started
- name: Enable metadata service
  service: name=ipfs-metadata enabled=yes state=started

