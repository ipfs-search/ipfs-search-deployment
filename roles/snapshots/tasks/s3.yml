---
- name: Check snapshot repository
  uri:
    url: "http://127.0.0.1:9200/_snapshot/{{ snapshot_s3_name }}"
    status_code: 200, 404
  register: snapshot_check
- name: Check keystore
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore list
  register: keystore
  failed_when: keystore.rc not in [0, 65]
- name: Loading secrets
  include_vars:
    file: ../../vault/secrets.yml
  when: |
    keystore.rc == 65 or
    's3.client.default.access_key' not in keystore.stdout or
    's3.client.default.secret_key' not in keystore.stdout
- name: Create keystore
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore create
  when: keystore.rc == 65
- name: Add S3 access key
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore add s3.client.default.access_key --stdin
  args:
    stdin: "{{ s3_access_key }}"
  when: "'s3.client.default.access_key' not in keystore.stdout"
  register: added_access_key
- name: Add S3 secret key
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore add s3.client.default.secret_key --stdin
  args:
    stdin: "{{ s3_secret_key }}"
  when: "'s3.client.default.secret_key' not in keystore.stdout"
  register: added_secret_key
- name: Restart elasticsearch
  systemd: daemon_reload=yes state=restarted name=elasticsearch
  when: added_access_key.changed or added_secret_key.changed
- name: Wait for elasticsearch to be ready
  wait_for:
    host: 127.0.0.1
    port: 9200
- name: Create snapshot repository
  uri:
    url: "http://127.0.0.1:9200/_snapshot/{{ snapshot_s3_name }}"
    method: PUT
    body_format: json
    body: |
      {
        "type": "s3",
        "settings": {
          "bucket": "{{ snapshot_s3_bucket }}",
          "storage_class": "standard_ia",
          "compress": true
        }
      }
  when: snapshot_check.status == 404
- name: Install snapshot script
  template:
    src: ipfs-search-snapshot.sh
    dest: /usr/local/bin/ipfs-search-snapshot-s3.sh
    mode: 0755
  vars:
    - snapshot_name: "{{ snapshot_s3_name }}"
- name: Elasticsearch S3 daily snapshot cronjob
  cron:
    name: "Elasticsearch S3 snapshot"
    cron_file: /etc/crontab
    minute: 16
    hour: 3
    backup: yes
    user: nobody
    job: "/usr/local/bin/ipfs-search-snapshot-s3.sh"
