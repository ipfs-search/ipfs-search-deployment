---
- name: Check snapshot repository
  uri:
    url: "http://127.0.0.1:9200/_snapshot/{{ snapshot_wasabi_name }}"
    status_code: 200, 404
  register: snapshot_check
- name: Check keystore
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore list
  register: keystore
  failed_when: keystore.rc not in [0, 65]
- name: Loading secrets
  include_vars:
    file: ../../vault/secrets.yml
  when: |
    keystore.rc == 65 or
    's3.client.wasabi.access_key' not in keystore.stdout or
    's3.client.wasabi.secret_key' not in keystore.stdout
- name: Create keystore
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore create
  when: keystore.rc == 65
- name: Add access key
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore add s3.client.wasabi.access_key --stdin
  args:
    stdin: "{{ wasabi_key }}"
  when: "'s3.client.wasabi.access_key' not in keystore.stdout"
  register: added_access_key
- name: Add secret key
  command: /usr/share/elasticsearch/bin/elasticsearch-keystore add s3.client.wasabi.secret_key --stdin
  args:
    stdin: "{{ wasabi_secret }}"
  when: "'s3.client.wasabi.secret_key' not in keystore.stdout"
  register: added_secret_key
- name: Configure Elasticsearch wasabi endpoint
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    backup: yes
    regexp: ^s3.client.wasabi.endpoint
    line: "s3.client.wasabi.endpoint: storageapi.wasabi.co"
    state: present
- name: Restart elasticsearch
  systemd: daemon_reload=yes state=restarted name=elasticsearch
  when: added_access_key.changed or added_secret_key.changed
- name: Wait for elasticsearch to be ready
  wait_for:
    host: 127.0.0.1
    port: 9200
- name: Create snapshot repository
  uri:
    url: "http://127.0.0.1:9200/_snapshot/{{ snapshot_wasabi_name }}"
    method: PUT
    body_format: json
    body: |
      {
        "type": "s3",
        "settings": {
          "bucket": "{{ snapshot_wasabi_bucket }}",
          "client": "wasabi",
          "compress": true,
          "chunk_size": "524288000B",
          "path_style_access": true
        }
      }
  when: snapshot_check.status == 404
- name: Install snapshot script
  template:
    src: ipfs-search-snapshot.sh
    dest: /usr/local/bin/ipfs-search-snapshot-wasabi.sh
    mode: 0755
  vars:
    - snapshot_name: "{{ snapshot_wasabi_name }}"
# TODO: Ensure this will only ever be added on one single host and removed on others.
# - name: Elasticsearch wasabi daily snapshot cronjob
#   cron:
#     name: "Elasticsearch wasabi snapshot"
#     cron_file: /etc/crontab
#     minute: "16"
#     hour: "3"
#     backup: yes
#     user: nobody
#     job: "/usr/local/bin/ipfs-search-snapshot-wasabi.sh"
