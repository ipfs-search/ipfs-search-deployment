## Common opensearch configuration parameters ##

os_cluster_name: ipfs-search
os_node_name: "{{ inventory_hostname_short }}"
os_node_roles: "{% if inventory_hostname in groups['master'] %}master{% else %}data, ingest{% endif %}"
os_conf_dir: /etc/opensearch
os_api_host: 127.0.0.1
populate_inventory_to_hosts_file: false
os_log_dir: "/var/log/opensearch"
os_data_dirs:
  - "/var/lib/opensearch"
os_seed_hosts: "{% for host in groups['master'] %}{{ hostvars[host].vlan_ip | ipaddr('address') }}{% if not loop.last %}, {% endif %}{% endfor %}"
os_config:
  network.host:
    - _local_
    - _site_

  node.attr.zone_id: "{{ zone_id }}"
  # Disable zone awareness, for now.
  # cluster.routing.allocation.awareness.attributes: zone_id
  network.publish_host: "{{ vlan_ip | ipaddr('address') }}"
  # Only during bootstrapping
  # https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-bootstrap-cluster.html
  # cluster.initial_master_nodes: "{{ groups['master'] }}"
  repositories.url.allowed_urls: ["http://localhost:8080/*"]

os_plugins:
  - repository-s3

# opensearch download
os_download_url: https://artifacts.opensearch.org/releases/bundle/opensearch
os_ipfs_download_url: http://127.0.0.1:8080/ipfs/QmXrMLA6njKaJhBo5epozXMqDQFgRJ7Ms5FfLxWsGcnbWs
os_sha256: 696500b3126d2f2ad7216456cff1c58e8ea89402d76e0544a2e547549cf910ca
os_dashboards_sha256: 2cb533d1ebf6bed2ee3b06f6458318b2fd8f36317ef35e10f092b4a9cb8a14ae

# opensearch version
# 2.x Latest Version
os_version: "2.3.0"

# opensearch dashboards version
# 2.x Latest Version
os_dashboards_version: "2.3.0"

# Configure hostnames for opensearch nodes
# It is required to configure SSL
# Example es1.example.com, es2.example.com
domain_name: example.com

os_set_hostname: false

# Cluster type whether its single-node or multi-node
os_multi_node: true

# opensearch user info
os_user: opensearch

os_dashboards_user: opensearch-dashboards

# Number of days that certificates are valid
cert_valid_days: 730

# Auth type: 'internal' or 'oidc' (OpenID). Default: internal
auth_type: internal

# OIDC settings
oidc:
  description: "Authenticate via IdP"
  # OpenID server URI
  connect_url: https://oidc.example.com/auth/realms/<realm name>/.well-known/openid-configuration
  # The JWT token field that contains the user name
  subject_key: preferred_username
  # the JWT token field that contains a list of user roles
  roles_key: roles
  # Scopes
  scopes: "openid profile email"
  # The address of Dashboards to redirect the user to after successful authentication
  dashboards_url: http(s)://<dashboards address>.example.com
  # IdP client ID
  client_id: opensearch
  # IdP client secret
  client_secret: "00000000-0000-0000-0000-000000000000"

# Overwrite demo configurations with your own
copy_custom_security_configs: false

# To override demo configurations, you can use your own configuration files.
# Place them in the "files" directory. Specify the path to the files
custom_security_plugin_configs:
  - files/tenants.yml
  - files/roles.yml
  - files/roles_mapping.yml
  - files/internal_users.yml

# By default, if the /tmp/opensearch-nodecerts directory with certificates
# exists on the server from which the playbook is launched, it is assumed
# that the configuration has not changed and some settings are not copied
# to the target servers.
#
# Conversely, if the /tmp/opensearch-nodecerts directory does not exist on
# the server from which the playbook is launched, then new certificates and
# settings are generated and they are copied to the target servers.
#
# If you use this repository not only for the initial deployment of the
# cluster, but also for its automatic configuration via CI/CD, then new
# certificates will be generated every time the pipeline is launched,
# overwriting existing ones, which is not always necessary if the cluster is
# already in production.
#
# When iac_enable enabling, and all the cluster servers have all the necessary
# certificates, they will not be copied again. If at least on one server (for
# example, when adding a new server to the cluster) if there is not at least one
# certificate from the list, then all certificates on all cluster servers will
# be updated
#
# Also, if the option is enabled, the settings files will be updated with each
# execution (previously, the settings were updated only if the
# /tmp/opensearch-nodecerts directory was missing on the server from which the
# playbook was launched and new certificates were generated)
iac_enable: false

### ipfs-search.com
os_enable_security: false
